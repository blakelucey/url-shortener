scalar AWSDateTime

type User {
  id: ID!
  userId: String!
  authType: String
  email: String
  firstName: String!
  lastName: String!
  isPro: Boolean
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input CreateUserInput {
  userId: String!
  authType: String
  email: String
  firstName: String!
  lastName: String!
  isPro: Boolean
}

input UpdateUserInput {
  userId: String!
  authType: String
  email: String
  firstName: String
  lastName: String
  isPro: Boolean
}

type Link {
  id: ID!
  userId: String!
  originalUrl: String!
  shortHash: String!
  channels: [String]
  campaigns: [String]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input CreateLinkInput {
  userId: String!
  originalUrl: String!
  shortHash: String!
  channels: [String]
  campaigns: [String]
}

input UpdateLinkInput {
  shortHash: String!
  userId: String
  originalUrl: String
  channels: [String]
  campaigns: [String]
}

type Click {
  id: ID!
  linkId: ID!
  userId: ID!
  timestamp: AWSDateTime!
  referrer: String
  ip: String
  userAgent: String
  deviceType: String
  browser: String
  operatingSystem: String
  country: String
  region: String
  city: String
  utm_source: String
  utm_medium: String
  utm_campaign: String
  utm_term: String
  utm_content: String
}

input CreateClickInput {
  linkId: ID!
  userId: ID!
  referrer: String
  ip: String
  userAgent: String
  deviceType: String
  browser: String
  operatingSystem: String
  country: String
  region: String
  city: String
  utm_source: String
  utm_medium: String
  utm_campaign: String
  utm_term: String
  utm_content: String
}

type Query {
  getUser(userId: String!): User
  listUsers: [User]
  
  getLink(shortHash: String!): Link
  listLinks: [Link]
  
  getClick(id: ID!): Click
  listClicks: [Click]
}

type Mutation {
  createUser(input: CreateUserInput!): User
  updateUser(input: UpdateUserInput!): User
  deleteUser(userId: String!): User

  createLink(input: CreateLinkInput!): Link
  updateLink(input: UpdateLinkInput!): Link
  deleteLink(shortHash: String!): Link

  createClick(input: CreateClickInput!): Click
}

schema {
  query: Query
  mutation: Mutation
}